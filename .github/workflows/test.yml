# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "develop", "main" ]
  pull_request:
    branches: [ "develop", "main" ]

jobs:
  sonarqube:
      runs-on: windows-latest

      steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
        working-directory: ./src
          
      - name: Setup .NET
        uses: microsoft/setup-msbuild@v1.1

      - name: Restore dependencies
        run: dotnet restore
        working-directory: ./src

      - uses: NuGet/setup-nuget@v1.1.1
      - name: NuGet Restore
        run: nuget restore "Visual Pattern Analytics.sln"
        working-directory: ./src

      - name: Setup VSTest
        uses: darenm/Setup-VSTest@v1

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        working-directory: ./src
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"QSD-P1_VisualPatternAnalytics" /o:"qsd-p1" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          msbuild "Visual Pattern Analytics.sln" -t:rebuild -verbosity:diag -property:Configuration=Release -m
          vstest.console.exe .\**\bin\Release\net6.0\*.Tests.dll /EnableCodeCoverage
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: microsoft/setup-msbuild@v1.1

    - name: Restore dependencies
      run: dotnet restore
      working-directory: ./src

    - uses: NuGet/setup-nuget@v1.1.1
    - name: NuGet Restore
      run: nuget restore "Visual Pattern Analytics.sln"
      working-directory: ./src

    - name: Build
      run: msbuild "Visual Pattern Analytics.sln" -t:rebuild -verbosity:diag -property:Configuration=Release -m
      working-directory: ./src

    - name: Setup VSTest
      uses: darenm/Setup-VSTest@v1

    - name: Run Tests
      run: vstest.console.exe .\**\bin\Release\net6.0\*.Tests.dll /EnableCodeCoverage
      working-directory: ./src
      
    - name: Upload VSIX bestand
      uses: actions/upload-artifact@v3
      with:
        name: VisualPatternAnalytics
        path: ./src/VPA.Client.VisualStudio.Extension.Vsix/bin/Release/VPA.Client.VisualStudio.Extension.Vsix.vsix
